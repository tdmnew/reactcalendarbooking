{"ast":null,"code":"import _classCallCheck from \"/home/HDD/Projects/React/calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/HDD/Projects/React/calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/HDD/Projects/React/calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/HDD/Projects/React/calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/HDD/Projects/React/calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/HDD/Projects/React/calendar/src/components/dashboard/Calendar.js\";\nimport React, { Component } from 'react';\nimport DateObj from '../date';\nimport { getDateProps } from '../../utils/date';\n\nvar Calender =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calender, _Component);\n\n  function Calender() {\n    var _this;\n\n    _classCallCheck(this, Calender);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calender).call(this));\n    _this.state = {\n      datesSelected: []\n    };\n    return _this;\n  } // Start is the first day of the month, end is the last.\n  // Last is the number of days the prior month\n\n\n  _createClass(Calender, [{\n    key: \"handleDateClicked\",\n    value: function handleDateClicked(e) {\n      e.preventDefault();\n      var datesSelected = this.state.datesSelected;\n      datesSelected.push(this.date);\n      this.setState({\n        datesSelected: datesSelected\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      //If the day of the week falls on the first day of the month, create a Date\n      // object, otherwise create an empty table data object\n      var tableRow = [];\n      var tableRows = [];\n      var counter = 0; //Work out if its the current month, and if so provide today's date\n\n      var isThisMonth = false;\n      var dateFunc = getDateProps();\n\n      if (this.props.year === dateFunc.year && this.props.month === dateFunc.month) {\n        isThisMonth = true;\n        var todaysDate = dateFunc.todaysDate;\n      }\n\n      for (var i = 1; i < 44; i++) {\n        if (tableRow.length > 6) {\n          //Assign all dates to a row\n          tableRows.push(React.createElement(\"tr\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, tableRow));\n          tableRow = [];\n        }\n\n        ;\n\n        if (i === this.props.start) {\n          //Check if the correct first day of the week\n          counter++; //then activate the counter for the loop below\n        }\n\n        if (counter >= 1 && counter <= this.props.end) {\n          //Populate with this month's dates\n          var date = new Date(this.props.year + \"-\" + this.props.month + \"-\" + counter);\n          var dayToday = void 0;\n\n          if (isThisMonth) {\n            if (counter === todaysDate) {\n              dayToday = true;\n            } else {\n              dayToday = false;\n            }\n          } else {\n            dayToday = false;\n          }\n\n          tableRow.push(React.createElement(DateObj, {\n            key: i,\n            date: date,\n            day: counter,\n            dayToday: dayToday,\n            dateClicked: this.handleDateClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }));\n          counter++;\n        } else if (counter > this.props.end) {\n          //Start again, with the dates for the next month\n          tableRow.push(React.createElement(\"td\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }));\n          counter++;\n        } else {\n          //For dates that exist in the previous month.\n          tableRow.push(React.createElement(\"td\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }));\n        }\n\n        ;\n      }\n\n      ;\n      return React.createElement(\"div\", {\n        id: \"calender\",\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        id: \"calender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        id: \"daysOfWeek\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"M\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"T\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"W\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"T\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"F\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"S\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"S\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, tableRows)));\n    }\n  }]);\n\n  return Calender;\n}(Component);\n\n;\nexport default Calender;","map":{"version":3,"sources":["/home/HDD/Projects/React/calendar/src/components/dashboard/Calendar.js"],"names":["React","Component","DateObj","getDateProps","Calender","state","datesSelected","e","preventDefault","push","date","setState","console","log","tableRow","tableRows","counter","isThisMonth","dateFunc","props","year","month","todaysDate","i","length","start","end","Date","dayToday","handleDateClicked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport DateObj from '../date';\r\n\r\nimport { getDateProps } from '../../utils/date';\r\n\r\nclass Calender extends Component {\r\n\tconstructor() {\r\n\t\tsuper() \r\n\t\tthis.state = {\r\n\t\t\tdatesSelected: []\r\n\t\t}\r\n\t}\r\n// Start is the first day of the month, end is the last.\r\n// Last is the number of days the prior month\r\n\r\n\thandleDateClicked(e) {\r\n\t\te.preventDefault()\r\n\t\tvar datesSelected = this.state.datesSelected\r\n\t\tdatesSelected.push(this.date)\r\n\t\tthis.setState({\r\n\t\t\tdatesSelected: datesSelected\r\n\t\t})\r\n\t\tconsole.log(this.state)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t}\r\n\t\r\n\trender(){\r\n\r\n\t//If the day of the week falls on the first day of the month, create a Date\r\n    // object, otherwise create an empty table data object\r\n    var tableRow = [];\r\n    var tableRows = [];\r\n    var counter = 0;\r\n\r\n    //Work out if its the current month, and if so provide today's date\r\n    var isThisMonth = false;\r\n    var dateFunc = getDateProps();\r\n\r\n    if(this.props.year === dateFunc.year && this.props.month === dateFunc.month){\r\n        isThisMonth = true\r\n        var todaysDate = dateFunc.todaysDate\r\n    }\r\n    \r\n    for(let i = 1; i < 44; i++) {\r\n        if(tableRow.length > 6) { //Assign all dates to a row\r\n        tableRows.push(<tr key={i}>{tableRow}</tr>);\r\n        tableRow = [];\r\n        };\r\n        if(i === this.props.start) { //Check if the correct first day of the week\r\n            counter++                  //then activate the counter for the loop below\r\n        }\r\n\r\n        if(counter >= 1 && counter <= this.props.end) { //Populate with this month's dates\r\n        \r\n\t\t\tlet date = new Date(this.props.year + \"-\" + this.props.month + \"-\" + counter)\r\n\t\t\tlet dayToday;\r\n\t\t\tif(isThisMonth) {\r\n\t\t\t\tif(counter === todaysDate) {\r\n\t\t\t\t\tdayToday = true;\r\n\t\t\t\t} else {\r\n\t\t\t\tdayToday = false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdayToday = false\r\n\t\t\t}\r\n\t\t\t\ttableRow.push(<DateObj\r\n\t\t\t\tkey={i} \r\n\t\t\t\tdate={date} \r\n\t\t\t\tday={counter}\r\n\t\t\t\tdayToday={dayToday}\r\n\t\t\t\tdateClicked={this.handleDateClicked}/>);\r\n\r\n        counter++;\r\n      } else if(counter > this.props.end) { //Start again, with the dates for the next month\r\n        tableRow.push(<td key={i}></td>)\r\n        counter ++;\r\n      } else { //For dates that exist in the previous month.\r\n        tableRow.push(<td key={i}></td>)\r\n      };\r\n    };\r\n    \r\n\treturn (\r\n    <div id=\"calender\" className=\"container-fluid\">\r\n      <table className=\"table\" id=\"calender\">\r\n        <thead>\r\n            <tr id=\"daysOfWeek\">\r\n              <th>M</th>\r\n              <th>T</th>\r\n              <th>W</th>\r\n              <th>T</th>\r\n              <th>F</th>\r\n              <th>S</th>\r\n              <th>S</th>\r\n            </tr>\r\n        </thead>\r\n      <tbody>\r\n       {tableRows}\r\n      </tbody>\r\n      </table>\r\n    </div>\r\n    )\r\n  };\r\n};\r\n\r\nexport default Calender; \r\n"]},"metadata":{},"sourceType":"module"}
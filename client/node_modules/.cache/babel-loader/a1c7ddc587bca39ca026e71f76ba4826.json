{"ast":null,"code":"export function getDateProps(date) {\n  // If no parameter, create an object with todays date info. Else, parse the information for later use \n  if (!date) {\n    var dateObj = new Date();\n    var todaysDate = dateObj.getDate();\n    var month = dateObj.getMonth();\n    month += 1;\n    var year = dateObj.getFullYear();\n    date = {\n      year: year,\n      month: month,\n      todaysDate: todaysDate\n    };\n  } else {\n    var _date = date,\n        year = _date.year,\n        month = _date.month,\n        todaysDate = _date.todaysDate;\n  } // Add the day of the week the month starts on (To populate the calender)\n\n\n  var monthStart = new Date(year + \"-\" + month + \"-\" + 1);\n  var start = monthStart.getDay();\n\n  if (start === 0) {\n    //because 0 is returned if the day is a Sunday\n    start = 7;\n  }\n\n  var months; //check if leap year and update CalenderMonths with appropriate date.\n\n  if (year % 4 === 0 || year % 100 === 0 || year % 400 === 0) {\n    months = {\n      1: 31,\n      2: 29,\n      3: 31,\n      4: 30,\n      5: 31,\n      6: 30,\n      7: 31,\n      8: 31,\n      9: 30,\n      10: 31,\n      11: 30,\n      12: 31\n    };\n  } else {\n    months = {\n      1: 31,\n      2: 28,\n      3: 31,\n      4: 30,\n      5: 31,\n      6: 30,\n      7: 31,\n      8: 31,\n      9: 30,\n      10: 31,\n      11: 30,\n      12: 31\n    };\n  }\n\n  var end = months[month]; //how many days in the month selected\n\n  return {\n    start: start,\n    end: end,\n    year: year,\n    month: month,\n    todaysDate: todaysDate\n  };\n}","map":{"version":3,"sources":["/home/HDD/Projects/React/calendar/client/src/utils/date.js"],"names":["getDateProps","date","dateObj","Date","todaysDate","getDate","month","getMonth","year","getFullYear","monthStart","start","getDay","months","end"],"mappings":"AACA,OAAO,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC/B;AACA,MAAG,CAACA,IAAJ,EAAU;AACN,QAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAIC,UAAU,GAAGF,OAAO,CAACG,OAAR,EAAjB;AACA,QAAIC,KAAK,GAAGJ,OAAO,CAACK,QAAR,EAAZ;AAA+BD,IAAAA,KAAK,IAAI,CAAT;AAC/B,QAAIE,IAAI,GAAGN,OAAO,CAACO,WAAR,EAAX;AAEAR,IAAAA,IAAI,GAAG;AAACO,MAAAA,IAAI,EAAJA,IAAD;AAAOF,MAAAA,KAAK,EAALA,KAAP;AAAcF,MAAAA,UAAU,EAAVA;AAAd,KAAP;AACH,GAPD,MAOO;AAAA,gBAC+BH,IAD/B;AAAA,QACGO,IADH,SACGA,IADH;AAAA,QACSF,KADT,SACSA,KADT;AAAA,QACgBF,UADhB,SACgBA,UADhB;AAEN,GAX8B,CAa/B;;;AACA,MAAIM,UAAU,GAAG,IAAIP,IAAJ,CAASK,IAAI,GAAG,GAAP,GAAaF,KAAb,GAAqB,GAArB,GAA2B,CAApC,CAAjB;AAEA,MAAIK,KAAK,GAAGD,UAAU,CAACE,MAAX,EAAZ;;AACA,MAAGD,KAAK,KAAK,CAAb,EAAgB;AAAE;AACdA,IAAAA,KAAK,GAAG,CAAR;AACH;;AACD,MAAIE,MAAJ,CApB+B,CAsB/B;;AACA,MAAIL,IAAI,GAAG,CAAP,KAAa,CAAb,IAAiBA,IAAI,GAAG,GAAP,KAAe,CAAhC,IAAqCA,IAAI,GAAG,GAAP,KAAe,CAAxD,EAA6D;AAC1DK,IAAAA,MAAM,GAAG;AAAC,SAAG,EAAJ;AAAQ,SAAG,EAAX;AAAe,SAAG,EAAlB;AAAsB,SAAG,EAAzB;AAA6B,SAAG,EAAhC;AAAoC,SAAG,EAAvC;AAA2C,SAAG,EAA9C;AAAkD,SAAG,EAArD;AAAyD,SAAG,EAA5D;AAAgE,UAAI,EAApE;AAAwE,UAAI,EAA5E;AAAgF,UAAI;AAApF,KAAT;AACF,GAFD,MAEO;AACJA,IAAAA,MAAM,GAAG;AAAC,SAAG,EAAJ;AAAQ,SAAG,EAAX;AAAe,SAAG,EAAlB;AAAsB,SAAG,EAAzB;AAA6B,SAAG,EAAhC;AAAoC,SAAG,EAAvC;AAA2C,SAAG,EAA9C;AAAkD,SAAG,EAArD;AAAyD,SAAG,EAA5D;AAAgE,UAAI,EAApE;AAAwE,UAAI,EAA5E;AAAgF,UAAI;AAApF,KAAT;AACF;;AAED,MAAIC,GAAG,GAAGD,MAAM,CAACP,KAAD,CAAhB,CA7B+B,CA6BN;;AAEzB,SAAQ;AAACK,IAAAA,KAAK,EAALA,KAAD;AAAQG,IAAAA,GAAG,EAAHA,GAAR;AAAaN,IAAAA,IAAI,EAAJA,IAAb;AAAmBF,IAAAA,KAAK,EAALA,KAAnB;AAA0BF,IAAAA,UAAU,EAAVA;AAA1B,GAAR;AACH","sourcesContent":["    \r\nexport function getDateProps(date) {\r\n    // If no parameter, create an object with todays date info. Else, parse the information for later use \r\n    if(!date) {\r\n        var dateObj = new Date()\r\n        var todaysDate = dateObj.getDate()\r\n        var month = dateObj.getMonth();month += 1\r\n        var year = dateObj.getFullYear()\r\n\r\n        date = {year, month, todaysDate} \r\n    } else {\r\n        var { year, month, todaysDate } = date\r\n    }\r\n\r\n    // Add the day of the week the month starts on (To populate the calender)\r\n    var monthStart = new Date(year + \"-\" + month + \"-\" + 1)\r\n    \r\n    var start = monthStart.getDay()\r\n    if(start === 0) { //because 0 is returned if the day is a Sunday\r\n        start = 7\r\n    }\r\n    var months;\r\n\r\n    //check if leap year and update CalenderMonths with appropriate date.\r\n    if (year % 4 === 0 ||year % 100 === 0 || year % 400 === 0)   {\r\n       months = {1: 31, 2: 29, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31}\r\n    } else {\r\n       months = {1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31}\r\n    }\r\n\r\n    var end = months[month]; //how many days in the month selected\r\n\r\n    return ({start, end, year, month, todaysDate})\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/home/HDD/Projects/React/calender/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/HDD/Projects/React/calender/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/HDD/Projects/React/calender/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/HDD/Projects/React/calender/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/HDD/Projects/React/calender/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/HDD/Projects/React/calender/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/HDD/Projects/React/calender/src/components/dashboard/Calender.js\";\nimport React, { Component } from 'react';\nimport DateObj from '../date';\nimport { connect } from 'react-redux';\nimport { passTodaysHabits } from '../../actions/habitActions';\nimport { getDateProps } from '../../utils/date';\n\nvar Calender =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calender, _Component);\n\n  function Calender() {\n    var _this;\n\n    _classCallCheck(this, Calender);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calender).call(this));\n    _this.passHabits = _this.passHabits.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Start is the first day of the month, end is the last.\n  // Last is the number of days the prior month\n\n\n  _createClass(Calender, [{\n    key: \"passHabits\",\n    value: function passHabits(habits) {\n      this.props.passTodaysHabits(habits);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var epochStart, epochEnd, todaysEvents;\n      var habits = this.props.habitProps ? this.props.habitProps : null;\n\n      if (habits) {\n        //Work out earliest habit start and latest habit finish (So this will be marked on the calender)\n        var habitStart, habitEnd;\n        var earliestDate = [];\n        var longestDate = [];\n\n        for (var i = 0; i < habits.length; i++) {\n          habitStart = new Date(habits[i].dateCreated);\n          habitEnd = new Date(habits[i].dateToFinish); // epoch start/end for comparison\n\n          epochStart = Math.floor(habitStart / 1000);\n          epochEnd = Math.floor(habitEnd / 1000);\n          earliestDate.push(epochStart);\n          longestDate.push(epochEnd);\n        }\n\n        epochStart = Math.min.apply(Math, earliestDate);\n        epochEnd = Math.max.apply(Math, longestDate);\n      } //If the day of the week falls on the first day of the month, create a Date\n      // object, otherwise create an empty table data object\n\n\n      var tableRow = [];\n      var tableRows = [];\n      var counter = 0; //Work out if its the current month, and if so provide today's date\n\n      var isThisMonth = false;\n      var dateFunc = getDateProps();\n\n      if (this.props.year === dateFunc.year && this.props.month === dateFunc.month) {\n        isThisMonth = true;\n        var todaysDate = dateFunc.todaysDate;\n      }\n\n      for (var _i = 1; _i < 44; _i++) {\n        if (tableRow.length > 6) {\n          //Assign all dates to a row\n          tableRows.push(React.createElement(\"tr\", {\n            key: _i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, tableRow));\n          tableRow = [];\n        }\n\n        ;\n\n        if (_i === this.props.start) {\n          //Check if the correct first day of the week\n          counter++; //then activate the counter for the loop below\n        }\n\n        if (counter >= 1 && counter <= this.props.end) {\n          //Populate with this month's dates\n          var date = new Date(this.props.year + \"-\" + this.props.month + \"-\" + counter);\n          var dayEvents = [];\n          var dayToday = false; //Add habits that are supposed to exist on that day to an array and then generate an object for it. \n\n          if (habits) {\n            var dateEpoch = Math.floor(date / 1000); //Check within range for a user's habits\n\n            if (dateEpoch >= epochStart && dateEpoch <= epochEnd) {\n              var events = [];\n\n              for (var _i2 = 0; _i2 < habits.length; _i2++) {\n                //habitStart\n                var _habitStart = new Date(habits[_i2].dateCreated);\n\n                var habitEpochStart = Math.floor(_habitStart / 1000); //habitEnd\n\n                var _habitEnd = new Date(habits[_i2].dateToFinish);\n\n                var habitEpochEnd = Math.floor(_habitEnd / 1000);\n\n                if (dateEpoch >= habitEpochStart && dateEpoch <= habitEpochEnd) {\n                  events.push(habits[_i2]);\n                }\n              }\n\n              dayEvents = events;\n            }\n          }\n\n          if (isThisMonth && counter === todaysDate) {\n            if (habits) {\n              todaysEvents = dayEvents;\n              dayToday = true;\n            }\n          }\n\n          tableRow.push(React.createElement(DateObj, {\n            key: _i,\n            date: date,\n            day: counter,\n            dayToday: dayToday,\n            dayEvents: dayEvents,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }));\n          counter++;\n        } else if (counter > this.props.end) {\n          //Start again, with the dates for the next month\n          tableRow.push(React.createElement(\"td\", {\n            key: _i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }));\n          counter++;\n        } else {\n          //For dates that exist in the previous month.\n          tableRow.push(React.createElement(\"td\", {\n            key: _i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }));\n        }\n\n        ;\n      }\n\n      ;\n\n      if (!this.props.habits.todaysHabits && todaysEvents) {\n        this.passHabits(todaysEvents);\n      }\n\n      return React.createElement(\"div\", {\n        id: \"calender\",\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        id: \"calender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        id: \"daysOfWeek\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"M\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"T\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"W\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"T\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"F\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"S\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"S\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, tableRows)));\n    }\n  }]);\n\n  return Calender;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    habits: state.habits\n  };\n};\n\nexport default connect(mapStateToProps, {\n  passTodaysHabits: passTodaysHabits\n})(Calender);","map":{"version":3,"sources":["/home/HDD/Projects/React/calender/src/components/dashboard/Calender.js"],"names":["React","Component","DateObj","connect","passTodaysHabits","getDateProps","Calender","passHabits","bind","habits","props","epochStart","epochEnd","todaysEvents","habitProps","habitStart","habitEnd","earliestDate","longestDate","i","length","Date","dateCreated","dateToFinish","Math","floor","push","min","max","tableRow","tableRows","counter","isThisMonth","dateFunc","year","month","todaysDate","start","end","date","dayEvents","dayToday","dateEpoch","events","habitEpochStart","habitEpochEnd","todaysHabits","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport DateObj from '../date';\r\nimport { connect } from 'react-redux';\r\nimport {passTodaysHabits} from '../../actions/habitActions'\r\n\r\n\r\nimport { getDateProps } from '../../utils/date';\r\n\r\nclass Calender extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.passHabits = this.passHabits.bind(this)\r\n  }\r\n\r\n// Start is the first day of the month, end is the last.\r\n// Last is the number of days the prior month\r\n\r\n  passHabits(habits) {\r\n    this.props.passTodaysHabits(habits) \r\n  }\r\n\r\n  render(){\r\n\r\n    let epochStart, epochEnd, todaysEvents\r\n   \r\n    let habits = (this.props.habitProps ? this.props.habitProps : null)\r\n    \r\n    if(habits) {\r\n      //Work out earliest habit start and latest habit finish (So this will be marked on the calender)\r\n      let habitStart, habitEnd;\r\n      let earliestDate = []\r\n      let longestDate = []\r\n      for(let i = 0; i < habits.length; i++) {\r\n        habitStart =  new Date(habits[i].dateCreated)\r\n        habitEnd = new Date(habits[i].dateToFinish)\r\n        // epoch start/end for comparison\r\n        epochStart = Math.floor(habitStart / 1000)\r\n        epochEnd = Math.floor(habitEnd / 1000)\r\n\r\n        earliestDate.push(epochStart)\r\n        longestDate.push(epochEnd)\r\n      }\r\n      epochStart = Math.min(...earliestDate)\r\n      epochEnd = Math.max(...longestDate) \r\n    }\r\n\r\n    //If the day of the week falls on the first day of the month, create a Date\r\n    // object, otherwise create an empty table data object\r\n    var tableRow = [];\r\n    var tableRows = [];\r\n    var counter = 0;\r\n\r\n    //Work out if its the current month, and if so provide today's date\r\n    var isThisMonth = false;\r\n    var dateFunc = getDateProps();\r\n\r\n    if(this.props.year === dateFunc.year && this.props.month === dateFunc.month){\r\n        isThisMonth = true\r\n        var todaysDate = dateFunc.todaysDate\r\n    }\r\n    \r\n    for(let i = 1; i < 44; i++) {\r\n        if(tableRow.length > 6) { //Assign all dates to a row\r\n        tableRows.push(<tr key={i}>{tableRow}</tr>);\r\n        tableRow = [];\r\n        };\r\n        if(i === this.props.start) { //Check if the correct first day of the week\r\n            counter++                  //then activate the counter for the loop below\r\n        }\r\n\r\n        if(counter >= 1 && counter <= this.props.end) { //Populate with this month's dates\r\n        \r\n        let date = new Date(this.props.year + \"-\" + this.props.month + \"-\" + counter)\r\n        let dayEvents = []\r\n        let dayToday = false;\r\n\r\n        //Add habits that are supposed to exist on that day to an array and then generate an object for it. \r\n        if(habits) {\r\n          let dateEpoch = Math.floor(date / 1000)\r\n          //Check within range for a user's habits\r\n          if(dateEpoch >= epochStart && dateEpoch <= epochEnd){\r\n            let events = []\r\n            for(let i = 0; i < habits.length; i++) {\r\n              //habitStart\r\n              let habitStart = new Date(habits[i].dateCreated)\r\n              let habitEpochStart = Math.floor(habitStart / 1000)        \r\n              //habitEnd\r\n              let habitEnd = new Date(habits[i].dateToFinish)\r\n              let habitEpochEnd = Math.floor(habitEnd / 1000)\r\n              if(dateEpoch >= habitEpochStart && dateEpoch <= habitEpochEnd) {\r\n                  events.push(habits[i])\r\n                }\r\n            }\r\n            dayEvents = events;\r\n          }\r\n        }\r\n\r\n        if (isThisMonth && counter === todaysDate ) {\r\n            if(habits) {\r\n              todaysEvents = dayEvents;\r\n              dayToday = true;\r\n            }\r\n        } \r\n          \r\n        tableRow.push(<DateObj\r\n          key={i} \r\n          date={date} \r\n          day={counter}\r\n          dayToday={dayToday}\r\n          dayEvents={dayEvents}/>);\r\n\r\n        counter++;\r\n      } else if(counter > this.props.end) { //Start again, with the dates for the next month\r\n        tableRow.push(<td key={i}></td>)\r\n        counter ++;\r\n      } else { //For dates that exist in the previous month.\r\n        tableRow.push(<td key={i}></td>)\r\n      };\r\n    };\r\n\r\n    if(!this.props.habits.todaysHabits && todaysEvents) {\r\n      this.passHabits(todaysEvents)\r\n    }\r\n\r\n    return (\r\n    <div id=\"calender\" className=\"container-fluid\">\r\n      <table className=\"table\" id=\"calender\">\r\n        <thead>\r\n            <tr id=\"daysOfWeek\">\r\n              <th>M</th>\r\n              <th>T</th>\r\n              <th>W</th>\r\n              <th>T</th>\r\n              <th>F</th>\r\n              <th>S</th>\r\n              <th>S</th>\r\n            </tr>\r\n        </thead>\r\n      <tbody>\r\n       {tableRows}\r\n      </tbody>\r\n      </table>\r\n    </div>\r\n    )\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  habits: state.habits \r\n})\r\n\r\nexport default connect(mapStateToProps, {passTodaysHabits})(Calender);\r\n"]},"metadata":{},"sourceType":"module"}
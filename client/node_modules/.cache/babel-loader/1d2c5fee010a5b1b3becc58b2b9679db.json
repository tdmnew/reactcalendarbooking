{"ast":null,"code":"import _classCallCheck from \"/home/HDD/Projects/React/calendar/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/HDD/Projects/React/calendar/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/HDD/Projects/React/calendar/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/HDD/Projects/React/calendar/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/HDD/Projects/React/calendar/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/HDD/Projects/React/calendar/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/HDD/Projects/React/calendar/client/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport Calendar from './Calendar';\nimport { getDateProps } from '../../utils/date';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this));\n\n    _this.updateDates = function (dates) {\n      console.log(dates);\n    };\n\n    _this.state = {\n      start: getDateProps().start,\n      end: getDateProps().end,\n      month: getDateProps().month,\n      year: getDateProps().year,\n      datesSelected: []\n    };\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderNextMonth = _this.renderNextMonth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderPreviousMonth = _this.renderPreviousMonth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // dates provided by calender\n\n\n  _createClass(Dashboard, [{\n    key: \"submit\",\n    value: function submit(e) {\n      e.preventDefault();\n      console.log(e.target);\n    }\n  }, {\n    key: \"renderPreviousMonth\",\n    value: function renderPreviousMonth() {\n      var month = this.state.month;\n      var year = this.state.year;\n      var todaysDate = this.state.todaysDate;\n\n      if (month === 1) {\n        year -= 1;\n        month = 12;\n      } else {\n        month -= 1;\n      }\n\n      var date = {\n        year: year,\n        month: month,\n        todaysDate: todaysDate\n      };\n      this.setState({\n        year: year,\n        month: month,\n        start: getDateProps(date).start,\n        end: getDateProps(date).end\n      });\n    }\n  }, {\n    key: \"renderNextMonth\",\n    value: function renderNextMonth() {\n      var month = this.state.month;\n      var year = this.state.year;\n      var todaysDate = this.state.todaysDate;\n\n      if (month === 12) {\n        year += 1;\n        month = 1;\n      } else {\n        month += 1;\n      }\n\n      var date = {\n        year: year,\n        month: month,\n        todaysDate: todaysDate\n      };\n      this.setState({\n        year: year,\n        month: month,\n        start: getDateProps(date).start,\n        end: getDateProps(date).end\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var calendar = React.createElement(\"div\", {\n        id: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, months[this.state.month - 1], \" \", this.state.year), React.createElement(Calendar, {\n        start: this.state.start,\n        end: this.state.end,\n        year: this.state.year,\n        month: this.state.month,\n        updateDates: this.updateDates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: this.renderPreviousMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Previous\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-sm\",\n        onClick: this.renderNextMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Next\"));\n      var forms = React.createElement(\"div\", {\n        id: \"forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"name\",\n        name: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"name@example.com\",\n        name: \"emaiL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Submit\")));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, calendar, \" \", forms);\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/HDD/Projects/React/calendar/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","Calendar","getDateProps","Dashboard","updateDates","dates","console","log","state","start","end","month","year","datesSelected","submit","bind","renderNextMonth","renderPreviousMonth","e","preventDefault","target","todaysDate","date","setState","months","calendar","forms"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Calendar from './Calendar';\nimport { getDateProps } from '../../utils/date'; \n\nclass Dashboard extends Component {\n    constructor(){\n        super()\n\t\t\n\t\tthis.state = {\n\t\t\tstart: getDateProps().start,\n\t\t\tend: getDateProps().end,\n\t\t\tmonth: getDateProps().month,\n\t\t\tyear: getDateProps().year,\n\t\t\tdatesSelected: []\n\t\t}\n\n\t\tthis.submit = this.submit.bind(this);\n        this.renderNextMonth = this.renderNextMonth.bind(this);\n        this.renderPreviousMonth = this.renderPreviousMonth.bind(this);\n    }  \n\t// dates provided by calender\n\tupdateDates = (dates) => {\n\t\tconsole.log(dates)\n\t}\n\n\n\tsubmit(e) {\n\t\te.preventDefault()\n\t\tconsole.log(e.target)\n\t}\n\n\trenderPreviousMonth() {\n\t\tvar month = this.state.month\n\t\tvar year = this.state.year\n\t\tvar todaysDate = this.state.todaysDate\n\n        if(month === 1) {\n            year -= 1\n            month = 12;\n        } else {\n            month -= 1\n        }\n        var date = { year, month, todaysDate  }\n        this.setState({\n\t\t\tyear: year,\n\t\t\tmonth: month,\n\t\t\tstart: getDateProps(date).start,\n\t\t\tend: getDateProps(date).end,\n\t\t\t})\n\t\t}\n\n    renderNextMonth() {\n\t\tvar month = this.state.month\n\t\tvar year = this.state.year\n\t\tvar todaysDate = this.state.todaysDate\n\n        if(month === 12) {\n            year += 1\n            month = 1;\n        } else {\n            month += 1\n        }\n        var date = { year, month, todaysDate  }\n        this.setState({\n\t\t\tyear: year,\n\t\t\tmonth: month,\n\t\t\tstart: getDateProps(date).start,\n\t\t\tend: getDateProps(date).end,\n\t\t\t})\n\t}\n\n    render() {\n\t\tlet months = [\"January\", \"February\", \"March\", \"April\", \"May\", \n\t\t\t\t\t  \"June\", \"July\", \"August\", \"September\", \"October\", \n\t\t\t\t\t  \"November\", \"December\"]\n\n\t\tconst calendar = \n\t\t\t<div id=\"dashboard\">\n\t\t\t\t<h1>{months[this.state.month - 1]} {this.state.year}</h1>\n\t\t\t\t<Calendar \n\t\t\t\tstart={this.state.start} \n\t\t\t\tend={this.state.end} \n\t\t\t\tyear={this.state.year} \n\t\t\t\tmonth={this.state.month}\n\t\t\t\tupdateDates={this.updateDates}/>\n\t\t\t  <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={this.renderPreviousMonth}>Previous</button>\n\t\t\t  <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={this.renderNextMonth}>Next</button>\n\t\t\t</div>\n\n\n\t\tconst forms = \n\t\t\t<div id=\"forms\">\n\t\t\t<form>\n\t\t\t\t<label>Name</label>\n\t\t\t\t<br/>\n\t\t\t\t<input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"name\" name=\"name\"/>\n\t\t\t\t<br/>\n\t\t\t\t<label>Email address</label>\n\t\t\t\t<br/>\n\t\t\t\t<input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"name@example.com\" name=\"emaiL\"/>\n\t\t\t\t<br/>\n\t\t\t\t<button type=\"submit\" onClick={this.submit}>Submit</button>\n\t\t\t</form>\n\t\t\t</div>\n\n\t\treturn ( <div>{calendar} {forms}</div> )\n  };\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}